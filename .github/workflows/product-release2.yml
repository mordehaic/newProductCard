name: product-release2
run-name: ${{ github.actor }} is launching ðŸš€

on:
  workflow_dispatch:   ## To prevent the run of the script after pushing it to the repo
#   push:
#     branches: [dev]
#   pull_request: 
#     branches: [dev]  
#  push:
#    tags:
#      - '*'

env:
  NODE_VERSION: "18.x" # set this to the node version to use
  artifact_version: 1.0.6
        
jobs:

  product-release2:
      name: Deploy to UAT 
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      environment: UAT

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it
        - name: Checkout the repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ env.NODE_VERSION }}

        # Runs a single command using the runners shell
        - name: Install Salesforce CLI
          run: npm install sfdx-cli --global

        - name: Download artifact
          uses: actions/download-artifact@v3  
          with:
            name: Artifacts ${{ env.artifact_version }} 
            path: ./deploy/

        # # Checker download dawidd6    
        # - name: Download artifact
        #   uses: dawidd6/action-download-artifact@v2
        #   with:
        #     github_token: ${{ secrets.GITHUB_TOKEN }}
        #     workflow: product-integ2.yml
        #     tag_name: ${{ github.run_number }}
        #     release_name: Release ${{ github.run_number }} 

        - name: Test downloaded Artifact
          run: ls -R      
        
        # Adding a conditional to the release creation stage to check 
        # if the run is the first run, and then only create a release if it is,
        # otherwise skip that stage 
        # - name: Create GitHub release
        #   id: create-new-release
        #   uses: ncipollo/release-action@v1
        #   env: 
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        #   with:
        #     artifacts: Artifacts_${{ env.ARTIFACT_SHA }}
        #     replacesArtifacts: false
        #     token: ${{ secrets.GITHUB_TOKEN }}
        #     allowUpdates: true
        - name: Create GitHub release
          uses: actions/create-release@v1
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          with:
            tag_name: ${{ github.run_number }}
            release_name: Release ${{ github.run_number }}
            
        # Runs a single command using the runners shell
        - name: Create the server.key file from the secret variable SERVER_KEY
          run: echo "${{ secrets.SERVER_KEY }}"  > server.key
          
        # Runs a single command using the runners shell
        - name: Authentication to Salesforce
          run: sfdx force:auth:jwt:grant -i ${{ secrets.CONSUMER_KEY }} -f server.key -u ${{ vars.USERNAME }} -r ${{ vars.INSTANCEURL }}

        # Runs a set of commands using the runners shell
        - name: Deployment to Salesforce
          run: sfdx force:source:deploy -p force-app -w 10 -u ${{vars.USERNAME}}
        
        - run: echo "This job's status is ${{ job.status }}."
        
     
        
  