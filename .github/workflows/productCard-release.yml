name: productCard Release
run-name: ${{ github.actor }} is launching ðŸš€

on:
  # push:
  #   branches: [dev]
  # pull_request:
  #   branches: [dev]

env:
  NODE_VERSION: "18.x" # set this to the node version to use
        
jobs:

    build-project:
      name: Build project 
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it
        - name: Checkout the repository
          uses: actions/checkout@v3

        - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ env.NODE_VERSION }}
            #node-version: 18.x
            #cache: 'npm'

        # Runs a set of commands using the runners shell
        - name: npm install, build, and test
          run: |
            npm install
            npm run build --if-present
            npm run test --if-present

        # Runs a single command using the runners shell
        - name: Install Salesforce CLI
          run: npm install sfdx-cli --global

        # Runs a single command using the runners shell
        - name: Create Salesforce Project
          run: sfdx force:project:create --projectname deploy --defaultpackagedir app --manifest

        # Runs a single command using the runners shell
        #- name: Create folder ProductCard in staticresources
        #  run: mkdir -p ./deploy/app/main/default/staticresources/ProductCard && cp -r ./build/. ./deploy/app/main/default/staticresources/ProductCard

        - name: Create ProductCard Static Resources
          run: sfdx force:staticresource:create -n ProductCard
          working-directory: ./deploy/app/main/default/staticresources

        - name: Upload productCard artifact
          uses: actions/upload-artifact@v3
          with:
            name: productCard-artifact
            path: ./deploy # or path/to/artifact

        - name: List files in the repository
          run: |
            ls ${{ github.workspace }}
            cd deploy
            ls -la

        

        ## We have this error message for this actions:
        ## "Error: Unable to resolve action actions/download-checkout, repository not found"    
        # - name: Download artifact
        #   uses: actions/download-artifact@v3  
        #   with:
        #     env: 
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        #     #token: ${{ secrets.PAT }}
        #     ref: dev
        #     name: productCard-artifact
        #     path: ./deploy    

    release-project:
        name: Release project 
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        needs: build-project

        # permissions:
        #   id-token: write
        #   contents: read # default
        
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          
          # - name: Checkout the repository
          #   uses: actions/checkout@v3

          - name: List files in the repository
            run: |
              ls ${{ github.workspace }}

          - name: Download artifact
            id: download-artifact
            uses: actions/download-artifact@v3  
            with:
                #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
                name: productCard-artifact
                path: ./deploy

          # - name: List files in the repository
          #   run: |
          #     ls ${{ github.workspace }}
          #     cd deploy
          #     ls -la      
                
          #- name: Test downloaded Artifact
          #  run: ls -R
          # - uses: actions/checkout@v3
          #   with:
          #     ref: dev
         
          #- name: Create the archive directory
          #  run: mkdir -p ./archive
          
          - name: List files in the repository
            run: |
              ls -la ${{ github.workspace }}

          - uses: actions/checkout@master
          - name: Compress productCard-artifact
            uses: thedoctor0/zip-release@0.7.1
            with:
                filename: artifact.zip
          
          - name: Checkout code
            uses: actions/checkout@v2  
          - name: Create GitHub release
            id: create-new-release
            uses: actions/create-release@v1
            env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
            with:
              tag_name: ${{ github.run_number }}
              release_name: Release ${{ github.run_number }}
          
          - name: List files in the repository
            run: |
              ls -la ${{ github.workspace }}
          
          - name: Search the zip file in the directory
            run: |
              find . -name artifact.zip   

          # - name: Upload release asset
          #   uses: actions/upload-release-asset@v1
          #   env: 
          #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          #   with:
          #     upload_url: ${{ steps.create-new-release.outputs.upload_url}}
          #     asset_path: .
          #     #asset_path: ./artifact.zip 
          #     #asset_name: artifact-v${{ github.run_number}}.zip     
          #     asset_name: artifact.zip     
          #     asset_content_type: application/zip
            
            
          # Runs a single command using the runners shell
          - name: Create the server.key file from the secret variable SERVER_KEY
            run: echo "${{ secrets.SERVER_KEY }}"  > server.key

           # Runs a single command using the runners shell
          - name: Install Salesforce CLI
            run: npm install sfdx-cli --global
          
          # Runs a single command using the runners shell
          - name: Authentication to Salesforce
            run: sfdx force:auth:jwt:grant -i ${{ secrets.CONSUMER_KEY }} -f server.key -u ${{ vars.USERNAME }} -r ${{ vars.INSTANCEURL }}

          # Runs a set of commands using the runners shell
          - name: Deployment to Salesforce
            run: sfdx force:source:deploy -p force-app -w 10 -u ${{vars.USERNAME}}
            #run: sfdx force:source:deploy -p force-app/main/default/lwc/productCard -u ${{vars.USERNAME}}
            #working-directory: ./deploy
        #   #run: sfdx force:mdapi:deploy -d force-app/main/default -u ${{vars.USERNAME}}
        #   # run: |
        #   #   sfdx force:source:convert --rootdir app --outputdir app_tmp
        #   #   zip -r app.zip app_tmp
        #   #   rm -r app_tmp
        #   #   sfdx force:mdapi:deploy --zipfile app.zip -w 10 -u ${{ vars.USERNAME }} -l NoTestRun
        #   #   working-directory: ./deploy
     
        
  